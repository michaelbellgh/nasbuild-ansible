ServerName $hostname.$domain
<VirtualHost *:80>
    ServerName $hostname.$domain
    ServerAlias $hostname
    redirect 301 / https://$hostname.$domain
  <Location /plex>
    redirect 301 https://plex.$domain
  </Location>
   <Location /sonarr>
    redirect 301 https://$hostname.$domain/sonarr
  </Location>
  <Location /radarr>
    redirect 301 https://$hostname.$domain/radarr
  </Location>
  <Location /transmission>
    redirect 301 https://$hostname.$domain/transmission
  </Location>
  <Location /jackett>
    redirect 301 https://$hostname.$domain/jackett
  </Location>
  <Location /ombi>
    redirect 301 https://$hostname.$domain/ombi
  </Location>
  <Location /lidarr>
    redirect 301 https://$hostname.$domain/lidarr
  </Location>
</VirtualHost>
<Directory /opt/heimdall>
  Require all granted
  Options Indexes FollowSymLinks
  AllowOverride all
</Directory>
<Directory> /opt/heimdall_public/public>
  Require all granted
  Options Indexes FollowSymLinks
  AllowOverride all
</Directory>
<VirtualHost *:80>
    ServerName sonarr.$domain
    ServerAlias sonarr
    redirect 301 / https://$hostname.$domain/sonarr/
</VirtualHost>
<VirtualHost *:80>
    ServerName couchpotato.$domain
    ServerAlias couchpotato
    redirect 301 / https://$hostname.$domain/couchpotato/
</VirtualHost>
<VirtualHost *:80>
    ServerName ombi.$domain
    ServerAlias ombi
    redirect 301 / https://$hostname.$domain/ombi/
</VirtualHost>
<VirtualHost *:80>
    ServerName jackett.$domain
    ServerAlias jackett
    redirect 301 / https://$hostname.$domain/jackett/
</VirtualHost>
<VirtualHost *:80>
    ServerName transmission.$domain
    ServerAlias transmission
    redirect 301 / https://$hostname.$domain/transmission/
</VirtualHost>
<VirtualHost *:80>
    ServerName jackett.$domain
    ServerAlias jackett
    redirect 301 / https://jackett.$domain/jackett
</VirtualHost>
<VirtualHost *:80>
    ServerName lidarr.$domain
    ServerAlias lidarr
    redirect 301 / https://$hostname.$domain/lidarr
</VirtualHost>
<VirtualHost *:80>
    ServerName radarr.$domain
    ServerAlias radarr
    redirect 301 / https://$hostname.$domain/radarr
</VirtualHost>



<VirtualHost *:443>
  DocumentRoot /opt/heimdall/public
  <Location /sonarr>
    ProxyPass http://sonarr.$domain:8989/sonarr
    ProxyPassReverse http://sonarr.$domain:8989/sonarr
    Order allow,deny
    Allow from all
  </Location>
  <Location /ombi>
    ProxyPass http://ombi.$domain:5000/ombi
    ProxyPassReverse http://ombi.$domain:5000/sonarr
    Order allow,deny
    Allow from all
  </Location>
  <Location /lidarr>
    ProxyPass http://lidarr.$domain:8686/lidarr
    ProxyPassReverse http://lidarr.$domain:8686/lidarr
    Order allow,deny
    Allow from all
  </Location>
  <Location /jackett>
    ProxyPass http://jackett.$domain:9117/jackett
    ProxyPassReverse http://jackett.$domain:9117/jackett
	RequestHeader set X-Forwarded-Proto "https"
    Order allow,deny
    Allow from all
  </Location>
  <Location /transmission>
    ProxyPass http://transmission.$domain:9091/transmission
    ProxyPassReverse http://transmission.$domain:9091/transmission
    Order allow,deny
    Allow from all
  </Location>
  <Location /radarr>
    ProxyPass http://radarr.$domain:7878/radarr
    ProxyPassReverse http://radarr.$domain:7878/radarr
    Order allow,deny
    Allow from all
  </Location>
  ProxyRequests off
  SSLProxyEngine On
  SSLCertificateFile /var/www/ssl/ssl.crt
  SSLCertificateKeyFile /var/www/ssl/ssl.key
  SSLCACertificateFile /var/www/ssl/ca.crt
</VirtualHost>



<VirtualHost *:80>
  ServerName plex.$domain
  ServerAlias plex
  # This VirtualHost redirects everything to HTTPS on port 443.
  RewriteEngine On
  RewriteCond %{HTTPS} off
  RewriteRule (.*) https://%{HTTP_HOST}%{REQUEST_URI}
</VirtualHost>

<VirtualHost *:443>
  ServerName plex.$domain
  Options -Includes -ExecCGI

  RewriteEngine On
  RewriteCond %{THE_REQUEST} !HTTP/1.1$
  RewriteRule .* - [F]

  LimitRequestBody 512000
  SSLEngine On
  SSLCertificateFile /var/www/ssl/ssl.crt
  SSLCertificateKeyFile /var/www/ssl/ssl.key
  SSLCACertificateFile /var/www/ssl/ca.crt
  SSLProtocol +TLSv1.2

  Header always set Strict-Transport-Security "max-age=63072000; includeSubdomains; preload"
  Header always set X-Frame-Options DENY
  FileETag None
  TraceEnable off
  #Header edit Set-Cookie ^(.*)$ ;HttpOnly;Secure
  Header set X-XSS-Protection "1; mode=block"
  Timeout 60

    <Location /:/websockets/notifications>
        ProxyPass wss://plex:32400/:/websockets/notifications
        ProxyPassReverse wss://plex:32400/:/websockets/notifications
    </Location>

  <Proxy *>
        Order deny,allow
        Allow from all
  </Proxy>

    ProxyRequests Off
    ProxyPreserveHost On
    SSLProxyEngine On
    RequestHeader set Front-End-Https "On"
    ProxyPass / http://plex:32400/
    ProxyPassReverse / http://plex:32400/

    RewriteEngine on
    RewriteCond %{REQUEST_URI} !^/web
    RewriteCond %{HTTP:X-Plex-Device} ^$
    RewriteCond %{REQUEST_METHOD} !^(OPTIONS)$
    RewriteRule ^/$ /web/$1 [R,L]
</VirtualHost>


