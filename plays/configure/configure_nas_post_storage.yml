---
 - name: Configuring nas (pre stage)
   gather_facts: false
   connection: local
   hosts: esxi
   tasks:    

    - name: Load vm variables
      include_vars:
        file: ../../data/nas/vars/vm.yml
        name: vm_vars

    - name: Get VM fact
      vmware_vm_facts:
        hostname: "{{ hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        validate_certs: "{{ vm_vars.options.validate_certs }}"      
      delegate_to: localhost
      register: vmfacts
      until: '{{ vmfacts.virtual_machines | json_query(query) != "" }}'
      retries: 30
      vars:
        query: "[?guest_name=='{{ vm_vars.vminfo.vm_id }}'].ip_address" 
      delay: 60

    - name: Register VM Object (2.7)
      set_fact:
        vm_obj: vmfacts.virtual_machines[vm_vars.vminfo.vm_id]
      when: ansible_version.full < '2.8.1'

    - name: Register VM Object (2.8)
      set_fact:
        vm_obj: '{{ vmfacts.virtual_machines | json_query(query) }}'
      when: ansible_version.full >= '2.8.1'
      vars:
        query: "[?guest_name=='{{ vm_vars.vminfo.vm_id }}']"

      
    - name: Add hosts
      add_host:
        name: "{{ vm_obj[0].ip_address }}"
        ansible_ssh_user: "{{ vm_vars.creds.guest_user }}"
        password: "{{ vm_vars.creds.guest_pass }}"
        ansible_ssh_pass: "{{ vm_vars.creds.guest_pass }}"
        ansible_become: yes
        ansible_become_pass: "{{ vm_vars.creds.guest_pass }}"
        guest_user: "{{ vm_vars.creds.guest_user }}"
        guest_pass: "{{ vm_vars.creds.guest_pass }}"
        groups: nas
        
 - name: Configure NAS (implementation stage)
   gather_facts: false
   hosts: nas
   tasks:


    - name: Load VM variables
      include_vars:
        file: ../../data/nas/vars/vm.yml
        name: vm_vars

    - name: Ignore host key on first run
      set_fact:
        ansible_ssh_extra_args: '-o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no'
        
    - name: Mount drives
      mount:
        src: "{{ item.device }}"
        path: "{{item.mountpoint}}"
        fstype: "{{ item.fstype}}"
        state: mounted
      with_items: "{{ vm_vars.vminfo.additional_drives }}"

      become: yes

    - name: Set permissions on storage
      file:
        mode: "{{ item.mode }}"
        group: "{{ item.group }}"
        path: "{{ item.path }}"
        owner: "{{ item.owner }}"
        recurse: yes
      with_items: "{{ vm_vars.vminfo.post_build_permissions }}"
        

    - name: Reboot
      reboot: