---
 - name: Configuring nas (pre stage)
   gather_facts: false
   connection: local
   hosts: esxi
   tasks:    

    - name: Load vm variables
      include_vars:
        file: ../../data/nas_container/vars/vm.yml
        name: vm_vars

    - name: Get VM fact
      vmware_vm_facts:
        hostname: "{{ hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        validate_certs: "{{ vm_vars.options.validate_certs }}"      
      delegate_to: localhost
      register: vmfacts
      until: '{{ vmfacts.virtual_machines | json_query(query) != "" }}'
      retries: 30
      vars:
        query: "[?guest_name=='{{ vm_vars.vminfo.vm_id }}'].ip_address" 
      delay: 60

    - name: Register VM Object (2.7)
      set_fact:
        vm_obj: vmfacts.virtual_machines[vm_vars.vminfo.vm_id]
      when: ansible_version.full < '2.8.1'

    - name: Register VM Object (2.8)
      set_fact:
        vm_obj: '{{ vmfacts.virtual_machines | json_query(query) }}'
      when: ansible_version.full >= '2.8.1'
      vars:
        query: "[?guest_name=='{{ vm_vars.vminfo.vm_id }}']"

      
    - name: Add hosts
      add_host:
        name: "{{ vm_obj[0].ip_address }}"
        ansible_ssh_user: "{{ vm_vars.creds.guest_user }}"
        password: "{{ vm_vars.creds.guest_pass }}"
        ansible_ssh_pass: "{{ vm_vars.creds.guest_pass }}"
        ansible_become: yes
        ansible_become_pass: "{{ vm_vars.creds.guest_pass }}"
        guest_user: "{{ vm_vars.creds.guest_user }}"
        guest_pass: "{{ vm_vars.creds.guest_pass }}"
        groups: nas
        
 - name: Configure NAS (implementation stage)
   gather_facts: false
   hosts: nas
   tasks:


    - name: Load VM variables
      include_vars:
        file: ../../data/nas/vars/vm.yml
        name: vm_vars

    - name: Ignore host key on first run
      set_fact:
        ansible_ssh_extra_args: '-o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no'
        

    - name: Copy all required pre install files
      copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        force: yes
      become: yes
      with_items:
       - { src: "../../data/nas/ssl/rootca.crt", dest: "/usr/local/share/ca-certificates/" }
       - { src: "../../data/nas/ssl/www/", recurse: yes, dest: "/var/www/" }
 #Sets IPv4 preference for DNS, extended sockets for Transmission
    - name: Set system settings
      lineinfile:
        path: "{{ item.path }}"
        line: "{{ item.line }}"
      become: yes
      with_items:
       - { path: "/etc/gai.conf", line: "precedence ::ffff:0:0/96  100" }
       - { path: "/etc/sysctl.conf", line: "net.core.rmem_max = 4194304" }
       - { path: "/etc/sysctl.conf", line: "net.core.wmem_max = 1048576" }
          
    - name: Set hostname
      hostname:
        name: "{{ vm_vars.vminfo.hostname }}"
        
        
    # Customise items with your own mountpoints
    - name: Make storage drives mountpoints
      file:
        path: "{{ item }}"
        state: directory
      with_items:
       - /mnt/Storage
       - /mnt/NAS
       
    - name: Edit fstab (Need to uncomment after disks have been added manually)
      lineinfile:
        path: /etc/fstab
        line: "{{ item }}"
      with_items:
       - "#/dev/sdb1 /mnt/Storage ext4 defaults 0 0"
       - "#/dev/sdc1 /mnt/NAS ext4 defaults 0 0"      
       
    - name: Make service user group
      group:
        name: "{{ vm_vars.vminfo.service_user }}"
        state: present
        
    - name: Make service_user user
      user:
        name: "{{ vm_vars.vminfo.service_user }}"
        groups: "{{ vm_vars.vminfo.service_user }}"
        state: present
    
